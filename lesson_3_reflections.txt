Lesson 3 Reflections

March 10, 2015

When would you want to use a remote repository rather than keeping all your work local?

Hmm. Well I suppose the first obvious answer is that having a backup copy on a remote
database is useful to have in case my computer takes a dive on me. I also think it will
be easier to share with others via the web link, so if I'm looking for feedback on an
open source project, having it up on GitHub is the way to go. Also, another obvious
answer just occurred to me. What happens if I'm using somebody else's computer and don't
have access to my home repository? With a remote repository, I can work virtually from
any computer with internet access.


Why might you want to always pull changes manually rather than having Git automatically 
stay up-to-date with your remote repository?

That's a good question. I'm not really sure. I guess my first thought is I wouldn't
always want to pull a commit onto my home repository if I'm working on a different 
version on my computer, but the reason that doesn't convince me is we can already 
choose to do that through branching. I'm not sure if pulling requires a new commit
to be made, so I can definitely agree with the same logic that we use when choosing
to always manually commit files. I'm sure it's a matter of preference. If we are
thoughtful about when we commit, I personally don't see why we shouldn't have them
sync automatically — unless someone else is working on GitHub and it would be akin
to merging files at the wrong time.

Describe the differences between forks, clones, and branches. When would you use one 
instead of another?

Hmm. A fork seems to be a description of a repository listed on GitHub that originated
from someone else's repository. A clone is a copy of a repository you can import to
your local directory. A branch is what we already talked about — a way to branch out
from your master code for a variety of purposes.

A fork, as I mentioned, is best when you want to clone someone else's repository to
your GitHub account without them being involved in future edits or commits. I'm a bit
dark on whether or not a cloned repository affects other people's local Git or their
GitHub accounts, but I would surmise that they would only be involved if they are
included as a collaborator. I'd say the best example is the one we used, where we
cloned from GitHub to work on our own computer. A branch is when you want to work
on a different feature of the code without affecting the master branch. You can
have two people working on two different features, for example, with the intent
of merging the files later.

